name: Publish to NPM
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest  
          
      - name: Install dependencies
        working-directory: ./src/typescript
        run: npm ci
             
      - name: Generate openapi
        working-directory: ./src/typescript
        run: npm run generate:openapi

      - name: Generate types
        working-directory: ./src/typescript
        run: npm run generate:types

      - name: Build TypeScript
        working-directory: ./src/typescript
        run: npm run build
        
      - name: Update package version
        working-directory: ./src/typescript
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            # Use release tag version
            RELEASE_VERSION=${GITHUB_REF#refs/tags/}
            RELEASE_VERSION=${RELEASE_VERSION#v}
            echo "Setting version from release tag: $RELEASE_VERSION"
            npm version $RELEASE_VERSION --no-git-tag-version
          else
            # Manual dispatch - check if it's a semver bump or specific version
            VERSION_INPUT="${{ github.event.inputs.version_bump }}"
            if [[ "$VERSION_INPUT" =~ ^[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
              # Specific version provided
              echo "Setting specific version: $VERSION_INPUT"
              npm version $VERSION_INPUT --no-git-tag-version
            else
              # Semver bump (patch, minor, major)
              echo "Bumping version: $VERSION_INPUT"
              npm version $VERSION_INPUT --no-git-tag-version
            fi
          fi
          
      - name: Authenticate with NPM
        working-directory: ./src/typescript
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" > .npmrc

      - name: Publish to NPM
        working-directory: ./src/typescript
        run: npm publish
