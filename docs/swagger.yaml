basePath: /
definitions:
  api.AddMarkerErrorResponse:
    properties:
      applicationStatusCode:
        description: Application-specific error code
        type: string
      entityStatusCode:
        description: Entity-specific error code
        type: string
      httpStatusCode:
        description: HTTP status code for the error
        type: integer
      message:
        description: Error message describing the issue
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the error, such as timestamps and request
          IDs
    type: object
  api.AddMarkerRequest:
    properties:
      marker:
        $ref: '#/definitions/models.Marker'
    type: object
  api.AddMarkerResponse:
    properties:
      marker:
        $ref: '#/definitions/models.Marker'
    type: object
  api.AddMarkerSuccessResponse:
    properties:
      applicationStatusCode:
        description: Application-specific status code
        type: string
      data:
        $ref: '#/definitions/api.AddMarkerResponse'
      entityStatusCode:
        description: Entity-specific status code
        type: string
      httpStatusCode:
        description: HTTP status code for the response
        type: integer
      message:
        description: Success message describing the operation
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the response, such as timestamps and
          request IDs
    type: object
  api.ErrorResponse:
    properties:
      applicationStatusCode:
        description: Application-specific error code
        type: string
      entityStatusCode:
        description: Entity-specific error code
        type: string
      httpStatusCode:
        description: HTTP status code for the error
        type: integer
      message:
        description: Error message describing the issue
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the error, such as timestamps and request
          IDs
    type: object
  api.GetMarkersErrorResponse:
    properties:
      applicationStatusCode:
        description: Application-specific error code
        type: string
      entityStatusCode:
        description: Entity-specific error code
        type: string
      httpStatusCode:
        description: HTTP status code for the error
        type: integer
      message:
        description: Error message describing the issue
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the error, such as timestamps and request
          IDs
    type: object
  api.GetMarkersRequest:
    type: object
  api.GetMarkersResponse:
    properties:
      markers:
        items:
          $ref: '#/definitions/models.Marker'
        type: array
    type: object
  api.GetMarkersSuccessResponse:
    properties:
      applicationStatusCode:
        description: Application-specific status code
        type: string
      data:
        $ref: '#/definitions/api.GetMarkersResponse'
      entityStatusCode:
        description: Entity-specific status code
        type: string
      httpStatusCode:
        description: HTTP status code for the response
        type: integer
      message:
        description: Success message describing the operation
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the response, such as timestamps and
          request IDs
    type: object
  api.GetTimelineErrorResponse:
    properties:
      applicationStatusCode:
        description: Application-specific error code
        type: string
      entityStatusCode:
        description: Entity-specific error code
        type: string
      httpStatusCode:
        description: HTTP status code for the error
        type: integer
      message:
        description: Error message describing the issue
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the error, such as timestamps and request
          IDs
    type: object
  api.GetTimelineRequest:
    properties:
      filter:
        $ref: '#/definitions/api.MediaFilter'
    type: object
  api.GetTimelineResponse:
    properties:
      device:
        $ref: '#/definitions/models.Device'
      media:
        items:
          $ref: '#/definitions/models.Media'
        type: array
    type: object
  api.GetTimelineSuccessResponse:
    properties:
      applicationStatusCode:
        description: Application-specific status code
        type: string
      data:
        $ref: '#/definitions/api.GetTimelineResponse'
      entityStatusCode:
        description: Entity-specific status code
        type: string
      httpStatusCode:
        description: HTTP status code for the response
        type: integer
      message:
        description: Success message describing the operation
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the response, such as timestamps and
          request IDs
    type: object
  api.MediaFilter:
    properties:
      classifications:
        items:
          type: string
        type: array
      dates:
        items:
          type: string
        type: array
      devices:
        items:
          type: string
        type: array
      favourite:
        type: boolean
      globalSearch:
        type: boolean
      hasLabel:
        type: boolean
      hourRange:
        $ref: '#/definitions/models.HourRange'
      lastMedia:
        type: integer
      limit:
        type: integer
      markers:
        items:
          type: string
        type: array
      offset:
        type: integer
      regions:
        items:
          $ref: '#/definitions/models.Region'
        type: array
      sort:
        type: string
      viewStyle:
        type: string
    type: object
  api.Metadata:
    properties:
      error:
        description: Error message if any
        type: string
      function:
        description: Function name where the response was generated
        type: string
      language:
        description: Language of the response, if applicable
        type: string
      missingFields:
        description: List of missing fields in the request
        items:
          type: string
        type: array
      organisationId:
        description: Organisation ID for the request
        type: string
      path:
        description: Path of the request
        type: string
      timestamp:
        description: Timestamp of the request or response
        type: integer
      traceId:
        description: Trace ID for tracking requests
        type: string
      userId:
        description: User ID of the user making the request
        type: string
    type: object
  api.SuccessResponse:
    properties:
      applicationStatusCode:
        description: Application-specific status code
        type: string
      entityStatusCode:
        description: Entity-specific status code
        type: string
      httpStatusCode:
        description: HTTP status code for the response
        type: integer
      message:
        description: Success message describing the operation
        type: string
      metaData:
        allOf:
        - $ref: '#/definitions/api.Metadata'
        description: Additional metadata about the response, such as timestamps and
          request IDs
    type: object
  models.Audit:
    properties:
      createdAt:
        type: integer
      createdBy:
        type: string
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  models.Comment:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      author:
        type: string
      content:
        type: string
      deviceId:
        description: |-
          RBAC information
          DeviceId is a unique identifier for the device, it can be used to identify the device in the system.
          OrganisationId is used to identify the organisation that owns the device.
        type: string
      id:
        type: string
      organisationId:
        type: string
      parentId:
        description: ID of the parent comment, if this is a reply
        type: string
      timestamps:
        items:
          type: integer
        type: array
      type:
        description: Comment information
        type: string
    type: object
  models.Device:
    properties:
      atRuntimeMetadata:
        allOf:
        - $ref: '#/definitions/models.DeviceAtRuntimeMetadata'
        description: |-
          AtRuntimeMetadata contains metadata that is generated at runtime, which can include
          more verbose information about the device's current state, capabilities, or configuration.
          for example the linked sites details, etc.
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      cameraMetadata:
        allOf:
        - $ref: '#/definitions/models.DeviceCameraMetadata'
        description: Camera Metadata
      deployment:
        description: e.g. "factory", "docker", "docker compose", "kubernetes"
        type: string
      deviceId:
        type: string
      deviceType:
        description: e.g. "camera", "sensor", "access_control"
        type: string
      featurePermissions:
        allOf:
        - $ref: '#/definitions/models.DeviceFeaturePermissions'
        description: |-
          FeaturePermissions is used to identify the permissions of the device, such as read, write, delete, etc.
          It is a map of feature names to permissions.
          For example, "camera" can have permissions like "read", "write", "delete", etc.
          This allows for fine-grained control over what features are accessible by users or groups.
          FeaturePermissions can be used to implement Role-Based Access Control (RBAC) for devices.
      groupId:
        type: string
      id:
        type: string
      lastSeenTimestamp:
        description: last time the device was seen online (timestamp in milliseconds)
        type: integer
      locationMetadata:
        allOf:
        - $ref: '#/definitions/models.DeviceLocationMetadata'
        description: Location metadata
      metadata:
        allOf:
        - $ref: '#/definitions/models.DeviceMetadata'
        description: Metadata
      name:
        description: |-
          Device information
          Note: DeviceId is a unique identifier for the device, it can be used to identify the device in the system.
          DeviceType is used to identify the type of device, such as camera, sensor, access control, etc.
        type: string
      organisationId:
        type: string
      releaseHash:
        description: e.g. "v1.0.0-abcdef123456"
        type: string
      siteId:
        description: |-
          RBAC information
          Note: SiteId is used to identify the site where the device is located.
          GroupId is used to identify the group of devices.
          OrganisationId is used to identify the organisation that owns the device.
          FeaturePermissions is used to identify the permissions of the device, such as read, write, delete, etc.
        type: string
      status:
        description: |-
          Device status
          Note: Status is used to identify the status of the device, such as online, offline, maintenance, etc.
          LastSeenTimestamp is used to identify the last time the device was seen online.
        type: string
      version:
        description: |-
          Versioning information
          Note: Version is used to identify the version of the device software.
          ReleaseHash is used to identify the release hash of the device software, it can be used to identify the specific build of the device software.
          Deployment is used to identify the deployment type of the device, such as factory, docker, docker compose, kubernetes, etc.
        type: string
    type: object
  models.DeviceAtRuntimeMetadata:
    type: object
  models.DeviceCameraMetadata:
    properties:
      bitrate:
        description: Bitrate in kbps
        type: integer
      codec:
        description: e.g. "H.264", "H.265"
        type: string
      frameRate:
        description: Frame rate in fps
        type: integer
      hasAudio:
        description: Indicates if the camera supports audio
        type: boolean
      hasIO:
        description: Indicates if the camera has input/output capabilities
        type: boolean
      hasOnvif:
        description: Indicates if the camera supports ONVIF protocol
        type: boolean
      hasPanTilt:
        description: Indicates if the camera supports pan and tilt functionality
        type: boolean
      hasPresets:
        description: Indicates if the camera supports presets
        type: boolean
      hasZoom:
        description: Indicates if the camera supports zoom functionality
        type: boolean
      ios:
        description: Input/Output capabilities of the camera (such as alarms, relays,
          etc.)
        items:
          $ref: '#/definitions/models.IO'
        type: array
      presets:
        description: Presets for the camera, used for quick positioning
        items:
          $ref: '#/definitions/models.Preset'
        type: array
      resolution:
        description: e.g. "1920x1080", "1280x720"
        type: string
      tours:
        description: Tours for the camera, used for automated movements through presets
        items:
          $ref: '#/definitions/models.Tour'
        type: array
    type: object
  models.DeviceFeaturePermissions:
    properties:
      floorPlans:
        type: integer
      io:
        type: integer
      liveview:
        type: integer
      ptz:
        type: integer
      remoteConfig:
        type: integer
    type: object
  models.DeviceLocationMetadata:
    properties:
      fieldOfView:
        type: number
      location:
        $ref: '#/definitions/models.Location'
      onFloorPlans:
        items:
          type: string
        type: array
    type: object
  models.DeviceMetadata:
    properties:
      brand:
        description: e.g. "Nest", "Ring"
        type: string
      color:
        description: e.g. "#FF5733" (hex color code)
        type: string
      description:
        description: e.g. "Outdoor camera with night vision"
        type: string
      installationDate:
        description: Installation date in milliseconds since epoch
        type: integer
      lastMaintenance:
        description: Last maintenance date in milliseconds since epoch
        type: integer
      model:
        description: e.g. "Nest Cam", "Ring Doorbell"
        type: string
      mute:
        description: Mute status, e.g. false for unmuted, true for muted
        type: boolean
    type: object
  models.DevicePlacement:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      color:
        description: Color to represent the device on the floor plan
        type: string
      deviceId:
        description: ID of the device being placed
        type: string
      fabricKey:
        type: string
      fieldOfView:
        description: Field of view in degrees, if applicable
        type: number
      icon:
        description: Icon to represent the device on the floor plan
        type: string
      id:
        type: string
      radius:
        description: Radius of the device placement circle
        type: number
      relativeX:
        description: X relative to canvas width (0 to 1)
        type: number
      relativeY:
        description: Y relative to canvas height (0 to 1)
        type: number
      sliceEndAngle:
        description: End angle of the slice in degrees, if applicable
        type: number
      sliceMiddleAngle:
        description: Middle angle of the slice in degrees, if applicable
        type: number
      sliceStartAngle:
        description: Start angle of the slice in degrees, if applicable
        type: number
      x:
        description: Absolute X coordinate
        type: number
      "y":
        description: Absolute Y coordinate
        type: number
    type: object
  models.FeaturePermissions:
    properties:
      floorPlans:
        type: integer
      io:
        type: integer
      liveview:
        type: integer
      ptz:
        type: integer
      remote_config:
        type: integer
    type: object
  models.FloorPlan:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      devicePlacements:
        description: List of devices placed on the floor plan
        items:
          $ref: '#/definitions/models.DevicePlacement'
        type: array
      height:
        description: Dimensions of the floor plan in pixels
        type: integer
      id:
        type: string
      image:
        description: Base64 encoded image of the floor plan
        type: string
      name:
        description: Name of the floor plan
        type: string
      width:
        description: Dimensions of the floor plan in pixels
        type: integer
    type: object
  models.HourRange:
    properties:
      end:
        type: integer
      start:
        type: integer
    type: object
  models.IO:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      deviceId:
        description: device identifier
        type: string
      external:
        type: boolean
      hash:
        type: string
      id:
        type: string
      key:
        type: string
      lastSeenTimestamp:
        description: last time the IO was seen
        type: integer
      type:
        description: input or output
        type: string
      value:
        type: string
    type: object
  models.Location:
    properties:
      address:
        description: e.g. "123 Main St, Anytown, USA"
        type: string
      altitude:
        description: Altitude in meters
        type: number
      latitude:
        type: number
      longitude:
        type: number
    type: object
  models.Marker:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      description:
        description: Description of the marker
        type: string
      deviceId:
        description: Device information
        type: string
      duration:
        description: Duration of the marker in milliseconds
        type: integer
      endTimestamp:
        description: End timestamp of the marker in milliseconds since epoch
        type: integer
      groupId:
        description: GroupId is used to identify the group of markers
        type: string
      id:
        type: string
      mediaIds:
        description: Media information
        items:
          type: string
        type: array
      metaData:
        allOf:
        - $ref: '#/definitions/models.MarkerMetadata'
        description: Additional metadata
      name:
        description: Name or identifier for the marker e.g., "a license plate (2-HCP-007),
          an unique identifier (transaction_id, point of sale), etc."
        type: string
      organisationId:
        description: OrganisationId is used to identify the organisation that owns
          the marker
        type: string
      siteId:
        description: RBAC information
        type: string
      startTimestamp:
        description: Timing information
        type: integer
      synchronize:
        allOf:
        - $ref: '#/definitions/models.Synchronize'
        description: Synchronize
      type:
        description: Type of the marker e.g., "alert", "event", "door_opened", "person",
          "car" etc.
        type: string
    type: object
  models.MarkerMetadata:
    properties:
      comments:
        allOf:
        - $ref: '#/definitions/models.Comment'
        description: Additional comments or description of the marker
      tags:
        description: Tags associated with the marker for categorization
        items:
          type: string
        type: array
    type: object
  models.Media:
    properties:
      atRuntimeMetadata:
        allOf:
        - $ref: '#/definitions/models.MediaAtRuntimeMetadata'
        description: |-
          AtRuntimeMetadata contains metadata that is generated at runtime, which can include
          more verbose information about the device's current state, capabilities, or configuration.
          for example the linked sites details, etc.
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      deviceId:
        description: |-
          RBAC information
          DeviceId is a unique identifier for the device, it can be used to identify the device in the system.
          OrganisationId is used to identify the organisation that owns the device.
        type: string
      duration:
        type: integer
      endTimestamp:
        type: integer
      id:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/models.MediaMetadata'
        description: Metadata
      organisationId:
        type: string
      spriteFile:
        type: string
      spriteInterval:
        type: integer
      spriteProvider:
        type: string
      startTimestamp:
        description: Time window of media file.
        type: integer
      storageSolution:
        description: |-
          Media file information (by default "vault", however might change
          in the future (integration with other storage solutions, next to Vault).
        type: string
      thumbnailFile:
        type: string
      thumbnailProvider:
        type: string
      videoFile:
        description: Media file information
        type: string
      videoProvider:
        description: Vault provider information (contains where the media is stored
          on which underlaying cloud storage)
        type: string
    type: object
  models.MediaAtRuntimeMetadata:
    properties:
      spriteUrl:
        type: string
      thumbnailUrl:
        type: string
      videoUrl:
        type: string
    type: object
  models.MediaMetadata:
    properties:
      classifications:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
    type: object
  models.Point:
    properties:
      x:
        type: number
      "y":
        type: number
    type: object
  models.Preset:
    properties:
      name:
        type: string
      token:
        type: string
      x:
        type: number
      "y":
        type: number
      z:
        type: number
    type: object
  models.Region:
    properties:
      device:
        type: string
      height:
        type: integer
      id:
        type: string
      regionPoints:
        items:
          $ref: '#/definitions/models.Point'
        type: array
      width:
        type: integer
    type: object
  models.Role:
    properties:
      featurePermissions:
        $ref: '#/definitions/models.FeaturePermissions'
      id:
        type: string
      isActive:
        type: integer
      pages:
        items:
          type: string
        type: array
      role:
        type: string
      roleName:
        type: string
      timeWindow:
        $ref: '#/definitions/models.TimeWindow'
      timeWindowActive:
        type: integer
      user_id:
        type: string
    type: object
  models.Site:
    properties:
      audit:
        allOf:
        - $ref: '#/definitions/models.Audit'
        description: Audit information
      description:
        type: string
      devices:
        items:
          type: string
        type: array
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      locationMetadata:
        allOf:
        - $ref: '#/definitions/models.SiteLocationMetadata'
        description: Location metadata
      metadata:
        allOf:
        - $ref: '#/definitions/models.SiteMetadata'
        description: Metadata
      name:
        type: string
      organisationId:
        description: RBAC information
        type: string
      storageSolution:
        description: |-
          Media file information (by default "vault", however might change
          in the future (integration with other storage solutions, next to Vault).
        type: string
      vaultAccessKey:
        type: string
      vaultSecretKey:
        type: string
      vaultUri:
        type: string
    type: object
  models.SiteLocationMetadata:
    properties:
      location:
        $ref: '#/definitions/models.Location'
    type: object
  models.SiteMetadata:
    properties:
      color:
        type: string
      floorPlans:
        description: List of floor plans associated with the site
        items:
          $ref: '#/definitions/models.FloorPlan'
        type: array
      initials:
        type: string
      numberOfFloorPlans:
        type: integer
    type: object
  models.Status:
    enum:
    - pending
    - skipped
    - assigned
    - inProgress
    - completed
    - failed
    type: string
    x-enum-varnames:
    - SynchronizeStatusPending
    - SynchronizeStatusSkipped
    - SynchronizeStatusAssigned
    - SynchronizeStatusInProgress
    - SynchronizeStatusCompleted
    - SynchronizeStatusFailed
  models.Synchronize:
    properties:
      events:
        description: History of synchronization events
        items:
          $ref: '#/definitions/models.SynchronizeEvent'
        type: array
      message:
        description: Additional message or error description related to synchronization
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.Status'
        description: Status of synchronization with external systems
      timestamp:
        description: Timestamp of the last synchronization attempt
        type: integer
      workerId:
        description: ID of the worker handling synchronization
        type: string
    type: object
  models.SynchronizeEvent:
    properties:
      message:
        description: Additional message or error description related to synchronization
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.Status'
        description: Status of synchronization with external systems
      timestamp:
        description: Timestamp of the last synchronization attempt
        type: integer
      workerId:
        description: ID of the worker handling synchronization
        type: string
    type: object
  models.TimeWindow:
    properties:
      timeRange1MaxFriday:
        type: number
      timeRange1MaxMonday:
        type: number
      timeRange1MaxSaturday:
        type: number
      timeRange1MaxSunday:
        type: number
      timeRange1MaxThursday:
        type: number
      timeRange1MaxTuesday:
        type: number
      timeRange1MaxWednesday:
        type: number
      timeRange1MinFriday:
        type: number
      timeRange1MinMonday:
        type: number
      timeRange1MinSaturday:
        type: number
      timeRange1MinSunday:
        type: number
      timeRange1MinThursday:
        type: number
      timeRange1MinTuesday:
        type: number
      timeRange1MinWednesday:
        type: number
      timeRange2MaxFriday:
        type: number
      timeRange2MaxMonday:
        type: number
      timeRange2MaxSaturday:
        type: number
      timeRange2MaxSunday:
        type: number
      timeRange2MaxThursday:
        type: number
      timeRange2MaxTuesday:
        type: number
      timeRange2MaxWednesday:
        type: number
      timeRange2MinFriday:
        type: number
      timeRange2MinMonday:
        type: number
      timeRange2MinSaturday:
        type: number
      timeRange2MinSunday:
        type: number
      timeRange2MinThursday:
        type: number
      timeRange2MinTuesday:
        type: number
      timeRange2MinWednesday:
        type: number
    type: object
  models.Tour:
    properties:
      current:
        type: integer
      loop:
        type: boolean
      name:
        type: string
      presets:
        items:
          $ref: '#/definitions/models.Preset'
        type: array
      running:
        type: boolean
      speed:
        type: number
    type: object
host: localhost
info:
  contact: {}
  description: API for media models and related types
  title: Models API
  version: "1.0"
paths:
  /internal/addmarkererrorresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure AddMarkerErrorResponse schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AddMarkerErrorResponse'
      summary: Get AddMarkerErrorResponse (schema generation only)
      tags:
      - internal
  /internal/addmarkerrequest:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure AddMarkerRequest schema is
        generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AddMarkerRequest'
      summary: Get AddMarkerRequest (schema generation only)
      tags:
      - internal
  /internal/addmarkerresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure AddMarkerResponse schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AddMarkerResponse'
      summary: Get AddMarkerResponse (schema generation only)
      tags:
      - internal
  /internal/addmarkersuccessresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure AddMarkerSuccessResponse
        schema is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AddMarkerSuccessResponse'
      summary: Get AddMarkerSuccessResponse (schema generation only)
      tags:
      - internal
  /internal/audit:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Audit schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Audit'
      summary: Get Audit (schema generation only)
      tags:
      - internal
  /internal/comment:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Comment schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
      summary: Get Comment (schema generation only)
      tags:
      - internal
  /internal/device:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Device schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
      summary: Get Device (schema generation only)
      tags:
      - internal
  /internal/deviceatruntimemetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DeviceAtRuntimeMetadata schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceAtRuntimeMetadata'
      summary: Get DeviceAtRuntimeMetadata (schema generation only)
      tags:
      - internal
  /internal/devicecamerametadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DeviceCameraMetadata schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceCameraMetadata'
      summary: Get DeviceCameraMetadata (schema generation only)
      tags:
      - internal
  /internal/devicefeaturepermissions:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DeviceFeaturePermissions
        schema is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceFeaturePermissions'
      summary: Get DeviceFeaturePermissions (schema generation only)
      tags:
      - internal
  /internal/devicelocationmetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DeviceLocationMetadata schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceLocationMetadata'
      summary: Get DeviceLocationMetadata (schema generation only)
      tags:
      - internal
  /internal/devicemetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DeviceMetadata schema is
        generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceMetadata'
      summary: Get DeviceMetadata (schema generation only)
      tags:
      - internal
  /internal/deviceplacement:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure DevicePlacement schema is
        generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DevicePlacement'
      summary: Get DevicePlacement (schema generation only)
      tags:
      - internal
  /internal/entitystatus:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure EntityStatus schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
      summary: Get EntityStatus (schema generation only)
      tags:
      - internal
  /internal/featurepermissions:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure FeaturePermissions schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FeaturePermissions'
      summary: Get FeaturePermissions (schema generation only)
      tags:
      - internal
  /internal/floorplan:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure FloorPlan schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FloorPlan'
      summary: Get FloorPlan (schema generation only)
      tags:
      - internal
  /internal/getmarkerserrorresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetMarkersErrorResponse schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetMarkersErrorResponse'
      summary: Get GetMarkersErrorResponse (schema generation only)
      tags:
      - internal
  /internal/getmarkersrequest:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetMarkersRequest schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetMarkersRequest'
      summary: Get GetMarkersRequest (schema generation only)
      tags:
      - internal
  /internal/getmarkersresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetMarkersResponse schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetMarkersResponse'
      summary: Get GetMarkersResponse (schema generation only)
      tags:
      - internal
  /internal/getmarkerssuccessresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetMarkersSuccessResponse
        schema is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetMarkersSuccessResponse'
      summary: Get GetMarkersSuccessResponse (schema generation only)
      tags:
      - internal
  /internal/gettimelineerrorresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetTimelineErrorResponse
        schema is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetTimelineErrorResponse'
      summary: Get GetTimelineErrorResponse (schema generation only)
      tags:
      - internal
  /internal/gettimelinerequest:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetTimelineRequest schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetTimelineRequest'
      summary: Get GetTimelineRequest (schema generation only)
      tags:
      - internal
  /internal/gettimelineresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetTimelineResponse schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetTimelineResponse'
      summary: Get GetTimelineResponse (schema generation only)
      tags:
      - internal
  /internal/gettimelinesuccessresponse:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure GetTimelineSuccessResponse
        schema is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetTimelineSuccessResponse'
      summary: Get GetTimelineSuccessResponse (schema generation only)
      tags:
      - internal
  /internal/hourrange:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure HourRange schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HourRange'
      summary: Get HourRange (schema generation only)
      tags:
      - internal
  /internal/io:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure IO schema is generated in
        OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.IO'
      summary: Get IO (schema generation only)
      tags:
      - internal
  /internal/location:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Location schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Location'
      summary: Get Location (schema generation only)
      tags:
      - internal
  /internal/marker:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Marker schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Marker'
      summary: Get Marker (schema generation only)
      tags:
      - internal
  /internal/markermetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure MarkerMetadata schema is
        generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MarkerMetadata'
      summary: Get MarkerMetadata (schema generation only)
      tags:
      - internal
  /internal/mediaatruntimemetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure MediaAtRuntimeMetadata schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MediaAtRuntimeMetadata'
      summary: Get MediaAtRuntimeMetadata (schema generation only)
      tags:
      - internal
  /internal/mediafilter:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure MediaFilter schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MediaFilter'
      summary: Get MediaFilter (schema generation only)
      tags:
      - internal
  /internal/mediametadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure MediaMetadata schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MediaMetadata'
      summary: Get MediaMetadata (schema generation only)
      tags:
      - internal
  /internal/metadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Metadata schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Metadata'
      summary: Get Metadata (schema generation only)
      tags:
      - internal
  /internal/point:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Point schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Point'
      summary: Get Point (schema generation only)
      tags:
      - internal
  /internal/preset:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Preset schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Preset'
      summary: Get Preset (schema generation only)
      tags:
      - internal
  /internal/region:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Region schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Region'
      summary: Get Region (schema generation only)
      tags:
      - internal
  /internal/role:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Role schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Get Role (schema generation only)
      tags:
      - internal
  /internal/site:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Site schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Site'
      summary: Get Site (schema generation only)
      tags:
      - internal
  /internal/sitelocationmetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure SiteLocationMetadata schema
        is generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SiteLocationMetadata'
      summary: Get SiteLocationMetadata (schema generation only)
      tags:
      - internal
  /internal/sitemetadata:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure SiteMetadata schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SiteMetadata'
      summary: Get SiteMetadata (schema generation only)
      tags:
      - internal
  /internal/synchronize:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Synchronize schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Synchronize'
      summary: Get Synchronize (schema generation only)
      tags:
      - internal
  /internal/synchronizeevent:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure SynchronizeEvent schema is
        generated in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SynchronizeEvent'
      summary: Get SynchronizeEvent (schema generation only)
      tags:
      - internal
  /internal/timewindow:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure TimeWindow schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TimeWindow'
      summary: Get TimeWindow (schema generation only)
      tags:
      - internal
  /internal/tour:
    get:
      consumes:
      - application/json
      description: Internal endpoint used only to ensure Tour schema is generated
        in OpenAPI spec
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tour'
      summary: Get Tour (schema generation only)
      tags:
      - internal
  /media:
    post:
      consumes:
      - application/json
      description: Create a new media item
      parameters:
      - description: Media object
        in: body
        name: media
        required: true
        schema:
          $ref: '#/definitions/models.Media'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new media item
      tags:
      - media
  /media/{id}:
    get:
      consumes:
      - application/json
      description: Get a media item by ID
      parameters:
      - description: Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get a media item
      tags:
      - media
swagger: "2.0"
