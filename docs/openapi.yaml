openapi: 3.0.0
info:
  contact: {}
  description: API for media models and related types
  title: Models API
  version: "1.0"
paths:
  /internal/apimetadata:
    get:
      description: Internal endpoint used only to ensure APIMetadata schema is
        generated in OpenAPI spec
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.APIMetadata"
      summary: Get APIMetadata (schema generation only)
      tags:
        - internal
  /internal/mediametadata:
    get:
      description: Internal endpoint used only to ensure MediaMetadata schema is
        generated in OpenAPI spec
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.MediaMetadata"
      summary: Get MediaMetadata (schema generation only)
      tags:
        - internal
  /internal/testflowstruct:
    get:
      description: Internal endpoint used only to ensure TestFlowStruct schema is
        generated in OpenAPI spec
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.TestFlowStruct"
      summary: Get TestFlowStruct (schema generation only)
      tags:
        - internal
  /internal/timelinevalue:
    get:
      description: Internal endpoint used only to ensure TimelineValue schema is
        generated in OpenAPI spec
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.TimelineValue"
      summary: Get TimelineValue (schema generation only)
      tags:
        - internal
  /media:
    post:
      description: Create a new media item
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.Media"
        description: Media object
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.SuccessResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.ErrorResponse"
      summary: Create a new media item
      tags:
        - media
  "/media/{id}":
    get:
      description: Get a media item by ID
      parameters:
        - description: Media ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.Media"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.ErrorResponse"
      summary: Get a media item
      tags:
        - media
servers:
  - url: //localhost
components:
  schemas:
    models.APIMetadata:
      properties:
        error: {}
        path:
          type: string
        timestamp:
          type: integer
        user_id:
          type: string
      type: object
    models.ErrorResponse:
      properties:
        error_code:
          description: More specific custom error code or type
          type: string
        message:
          type: string
        meta_data:
          $ref: "#/components/schemas/models.APIMetadata"
        request_id:
          type: string
        status_code:
          type: integer
      type: object
    models.Media:
      description: Media model
      properties:
        deviceId:
          description: Media file owner
          type: string
        duration:
          type: integer
        endTimestamp:
          type: integer
        groupId:
          type: string
        metadata:
          description: Metadata
          items:
            $ref: "#/components/schemas/models.MediaMetadata"
          type: array
        organisationId:
          type: string
        spriteFile:
          type: string
        spriteInterval:
          type: integer
        spriteProvider:
          type: string
        spriteUrl:
          type: string
        startTimestamp:
          description: Time window of media file.
          type: integer
        storageSolution:
          description: >-
            Media file information (by default Vault (=kstorage), however might
            change

            in the future (integration with other storage solutions, next to Vault).
          type: string
        thumbnailFile:
          type: string
        thumbnailProvider:
          type: string
        thumbnailUrl:
          type: string
        userId:
          type: string
        videoFile:
          description: Media file information
          type: string
        videoProvider:
          type: string
        videoUrl:
          type: string
      type: object
    models.MediaMetadata:
      properties:
        classifications:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    models.SuccessResponse:
      properties:
        message:
          type: string
        meta_data:
          $ref: "#/components/schemas/models.APIMetadata"
        request_id:
          type: string
        status_code:
          type: integer
        success_code:
          type: string
      type: object
    models.TestFlowStruct:
      description: Test flow verification model
      properties:
        id:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        testNumber:
          type: integer
      type: object
    models.TimelineValue:
      description: Timeline value model
      properties:
        currentScale:
          type: integer
        currentTime:
          type: integer
        startTime:
          type: integer
        timelineZero:
          type: integer
      type: object
